class heap:
    array = []

    def insert(self,node): #node with count 3 and num = 1 
        self.array.append(node)
        childindex = len(self.array)-1
        parentindex = (childindex - 1)//2

        while(parentindex>=0 and self.array[childindex] > self.array[parentindex] ):
            temp = self.array[parentindex]
            self.array[parentindex] = self.array[childindex]
            self.array[childindex] = temp
            childindex = parentindex
            parentindex = (childindex - 1)//2


    def takeone(self):
            returning_num = self.array[0]
            self.array[0] = self.array[len(self.array)-1]
            del self.array[len(self.array)-1]
            parentindex = 0

            child1index = (parentindex *2)+1
            child2index = (parentindex *2)+2
            if( child1index < len(self.array) and child2index >= len(self.array) ):
                childindex = child1index
            else:
                if(child1index < len(self.array) and child2index < len(self.array) and self.array[child1index] > self.array[child2index]):
                    childindex = child1index
                else:
                    childindex = child2index

            while(childindex < len(self.array) and self.array[childindex]> self.array[parentindex]):
                temp = self.array[parentindex]
                self.array[parentindex] = self.array[childindex]
                self.array[childindex] = temp
                parentindex = childindex

                child1index = (parentindex *2)+1
                child2index = (parentindex *2)+2
                if( child1index < len(self.array) and child2index >= len(self.array) ):
                    childindex = child1index
                if(child1index < len(self.array) and child2index < len(self.array) and self.array[child1index] > self.array[child2index]):
                    childindex = child1index
                else:
                    childindex = child2index

            return returning_num


h = heap()
h.insert(3)
h.insert(2)
h.insert(1)
h.insert(4)
h.insert(5)
h.insert(6)

print(h.array)
print(h.takeone())
print(h.takeone())
print(h.takeone())
print(h.takeone())
print(h.takeone())
